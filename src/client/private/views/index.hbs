<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script src="https://unpkg.com/axios@1.0/dist/axios.min.js"></script>
    <script>
        async function uploadFile() {
            const fileInput = document.querySelector("#file-input");
            const file = fileInput.files[0];

            const formData = new FormData();
            formData.append('file', file);
            formData.append('uid', "6448377c3ffcda529a232e0b");
            formData.append('teamName', "Team1");

            axios.post("/uploadfile", formData)
        }

        async function login() {
            const email = document.querySelector("#login-email").value;
            const password = document.querySelector("#login-password").value;

            try {
                const passhash = await createHash(password);
                const formData = { email, passhash };

                const result = await axios.post("/login", formData);
                console.log(result);

                const jwt = result.data;

                document.cookie = `jwt=${jwt}; expires=Fri, 31 Dec 9999 23:59:59 UTC; path=/`;
            } catch (error) {
                switch (error.response.status) {
                    case 401:
                        alert("Incorrect password");
                        break;
                    case 404:
                        alert(`No user with email ${email}`);
                        break;
                    default:
                        alert("Unable to authorise user");
                }
            }
        }

        async function createHash(string) {
            const encoder = new TextEncoder();
            const data = encoder.encode(string);
            const hashBuffer = await crypto.subtle.digest('SHA-256', data);
            const hashArray = Array.from(new Uint8Array(hashBuffer));
            const hash = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');
            return hash;
        }
    </script>
</head>
<body>
    <input type="file" name="file" id="file-input"/>
    <button onclick="uploadFile()">Upload</button>
    <br/>
    <input type="email" name="login-email" id="login-email" placeholder="Email" value="JoshuaAGKelley@gmail.com" autocomplete="off"/>
    <input type="password" name="login-password" id="login-password" placeholder="Password" value="password" autocomplete="off"/>
    <button onclick="login()">Log in</button>
</body>
</html>